[project]
name = "mcp-yfinance"
version = "1.0.0"
description = "MCP server with yfinance tools for stock market data"
authors = [
    {name = "MCP yfinance", email = "mcp@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["mcp", "model-context-protocol", "tools", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core dependencies
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.2.0",
    
    # MCP (Model Context Protocol) dependencies
    "mcp>=1.9.0",
    "starlette>=0.36.0",
    
    # Configuration and environment
    "python-dotenv>=1.0.0",
    
    # HTTP and API
    "requests>=2.31.0",
    "httpx>=0.27.0",
    
    # JSON schema validation
    "jsonschema>=4.20.0",
    
    # Data processing and analysis
    "pandas>=2.1.4",
    "numpy>=1.25.2",
    "psutil>=5.9.6",
    "yfinance>=0.2.28",
    
    # Monitoring and metrics
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    
    # Utilities
    "click>=8.1.7",
    "rich>=13.7.0",
    "tabulate>=0.9.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    
    # Development and linting
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "isort>=5.12.0",
]

crewai = [
    # CrewAI (optional - for advanced agent examples)
    "crewai>=0.28.0",
    "crewai-tools>=0.0.10",
]

[project.scripts]
mcp-server = "src.mcp_server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short" 